{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red95\green112\blue168;\red1\green25\blue64;\red255\green255\blue255;
\red229\green168\blue255;\red255\green236\blue157;\red174\green208\blue255;\red253\green136\blue147;\red254\green185\blue125;
\red139\green255\blue255;\red200\green241\blue153;\red193\green134\blue38;}
{\*\expandedcolortbl;;\cssrgb\c44706\c52157\c71765;\cssrgb\c0\c14118\c31765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c92157\c73333\c100000;\cssrgb\c100000\c93333\c67843;\cssrgb\c73333\c85490\c100000;\cssrgb\c100000\c61569\c64314;\cssrgb\c100000\c77255\c56078;
\cssrgb\c60000\c100000\c100000;\cssrgb\c81961\c94510\c66275;\cssrgb\c80392\c59216\c19216;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # # Homework 4 - Alberto Trashaj, Manuel Rech\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Download the Nile data, available in the R dataset: and fit a LLM to the data. Compare your results with Table 2.1.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ### Import libraries\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # As usual we import the libraries needed to deal with algebra calculation and to plot the result.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 scipy\cf4 \strokec4 .\cf6 \strokec6 optimize\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf7 \strokec7 minimize\cf4 \strokec4  \cb1 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 matplotlib\cf4 \strokec4 .\cf6 \strokec6 pyplot\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ### Functions\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now, as we did in the Lab, we will define the function of the Kalman filter, the likelihood and the estimator function. \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ## Kalman filter\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 np\cf4 \strokec4 .\cf6 \strokec6 random\cf4 \strokec4 .\cf8 \strokec8 seed\cf7 \strokec7 (\cf9 \strokec9 0\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf7 \strokec7 KF\cf4 \strokec4 (\cf9 \strokec9 y\cf4 \strokec4 , \cf9 \strokec9 q\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cb1 \
\cb3     \cf8 \strokec8 m20\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 y\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 P20\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 q\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #why p20?\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 len(\cf9 \strokec9 y\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 mu_pred\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 empty(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 P\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 v\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 empty(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 K\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 F\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 dllk\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 empty(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 llk\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 0\cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 m20\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 P\cf4 \strokec4 [\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P20\cf4 \cb1 \strokec4 \
\
\
\cb3     \cf5 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf9 \strokec9 1\cf7 \strokec7 , \cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\cb3         \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 y\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 1\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 /\cf4 \strokec4  \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 *\cf4 \strokec4  (\cf9 \strokec9 1\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]) \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 q\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 dllk\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf10 \strokec10 -\cf9 \strokec9 0.5\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf8 \strokec8 log\cf7 \strokec7 (\cf8 \strokec8 F\cf7 \strokec7 [\cf8 \strokec8 t\cf7 \strokec7 ])\cf4 \cb1 \strokec4 \
\
\cb3         \cf7 \strokec7 print(\cf11 \strokec11 "Iteration:"\cf7 \strokec7 , \cf8 \strokec8 t\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 print(\cf11 \strokec11 "Likelihood:"\cf7 \strokec7 , \cf10 \strokec10 -\cf9 \strokec9 0.5\cf7 \strokec7  \cf10 \strokec10 *\cf7 \strokec7  \cf6 \strokec6 np\cf7 \strokec7 .\cf8 \strokec8 log\cf7 \strokec7 (\cf8 \strokec8 F\cf7 \strokec7 [\cf8 \strokec8 t\cf7 \strokec7 ]))\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 print(\cf11 \strokec11 "Score:"\cf7 \strokec7 , \cf10 \strokec10 -\cf8 \strokec8 K\cf7 \strokec7 [\cf8 \strokec8 t\cf7 \strokec7 ])\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 print(\cf11 \strokec11 "Signal-to-Noise Ratio (q):"\cf7 \strokec7 , \cf9 \strokec9 q\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 print()\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 #Since we need to define sigma_e_hat and the likelihood \cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 # we need the last element computed in the for loop, so we retrieve those values below\cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 1\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 /\cf4 \strokec4  \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 dllk\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf10 \strokec10 -\cf9 \strokec9 0.5\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf8 \strokec8 log\cf7 \strokec7 (\cf8 \strokec8 F\cf7 \strokec7 [\cf8 \strokec8 n\cf7 \strokec7  \cf10 \strokec10 -\cf7 \strokec7  \cf9 \strokec9 1\cf7 \strokec7 ])\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 y\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\
\cb3     \cf8 \strokec8 sigma_e_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 sum(\cf8 \strokec8 v\cf7 \strokec7 [\cf9 \strokec9 1\cf7 \strokec7 :] \cf10 \strokec10 **\cf7 \strokec7  \cf9 \strokec9 2\cf7 \strokec7  \cf10 \strokec10 /\cf7 \strokec7  \cf8 \strokec8 F\cf7 \strokec7 [\cf9 \strokec9 1\cf7 \strokec7 :])\cf4 \strokec4  \cf10 \strokec10 /\cf4 \strokec4  (\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cb3     \cf8 \strokec8 llk\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf10 \strokec10 -\cf9 \strokec9 0.5\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  (\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 ) \cf10 \strokec10 *\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf8 \strokec8 log\cf7 \strokec7 (\cf8 \strokec8 sigma_e_hat\cf7 \strokec7 )\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 sum(\cf8 \strokec8 dllk\cf7 \strokec7 [\cf9 \strokec9 1\cf7 \strokec7 :])\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \{\cf11 \strokec11 'mu_pred'\cf4 \strokec4 : \cf8 \strokec8 mu_pred\cf4 \strokec4 , \cf11 \strokec11 'llk'\cf4 \strokec4 : \cf8 \strokec8 llk\cf4 \strokec4 , \cf11 \strokec11 'v'\cf4 \strokec4 : \cf8 \strokec8 v\cf4 \strokec4 , \cf11 \strokec11 'F'\cf4 \strokec4 : \cf8 \strokec8 F\cf4 \strokec4 \}\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ## Loglikelihood \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf7 \strokec7 loglikelihood\cf4 \strokec4 (\cf9 \strokec9 par\cf4 \strokec4 , \cf9 \strokec9 y\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 q_new\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 par\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 obj\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 KF(\cf9 \strokec9 y\cf7 \strokec7 , \cf8 \strokec8 q_new\cf7 \strokec7 )\cf4 \strokec4 [\cf11 \strokec11 'llk'\cf4 \strokec4 ]\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf10 \strokec10 -\cf8 \strokec8 obj\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ## Estimator \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Here a mention has to be done with the function minimize: in the book, they used the 'BFGS' algorithm, although to get the most similar result to the table I used the 'Nelder-Mead' method just to be consistent with the table 2.1. \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # If in the method argument we put 'BFGS' the algorithm converges but not with the same result of the table.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #This uses the Nelder-Mead method\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf7 \strokec7 estimator\cf4 \strokec4 (\cf9 \strokec9 y\cf4 \strokec4 , \cf9 \strokec9 par\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 len(\cf9 \strokec9 y\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 q_0\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 par\cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 minimize(loglikelihood, \cf8 \strokec8 q_0\cf7 \strokec7 , \cf9 \strokec9 args\cf10 \strokec10 =\cf7 \strokec7 (\cf9 \strokec9 y\cf7 \strokec7 ,), \cf9 \strokec9 method\cf10 \strokec10 =\cf11 \strokec11 'Nelder-Mead'\cf7 \strokec7 )\cf4 \strokec4  \cf2 \strokec2 #here the method used is the Nelder-Mead although in the book they use BFGS \cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 q_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 hat\cf4 \strokec4 .x[\cf9 \strokec9 0\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 theta_list\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \{\cf11 \strokec11 'q_hat'\cf4 \strokec4 : \cf8 \strokec8 q_hat\cf4 \strokec4 , \cf11 \strokec11 'iter'\cf4 \strokec4 : \cf8 \strokec8 hat\cf4 \strokec4 .nit\}\cb1 \
\cb3     \cf8 \strokec8 out\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \{\cf11 \strokec11 'theta_list'\cf4 \strokec4 : \cf8 \strokec8 theta_list\cf4 \strokec4 \}\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 out\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ##This uses the BFGS method\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf7 \strokec7 estimator_bfgs\cf4 \strokec4 (\cf9 \strokec9 y\cf4 \strokec4 , \cf9 \strokec9 par\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 len(\cf9 \strokec9 y\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 q_0\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 par\cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 minimize(loglikelihood, \cf8 \strokec8 q_0\cf7 \strokec7 , \cf9 \strokec9 args\cf10 \strokec10 =\cf7 \strokec7 (\cf9 \strokec9 y\cf7 \strokec7 ,), \cf9 \strokec9 method\cf10 \strokec10 =\cf11 \strokec11 'BFGS'\cf7 \strokec7 , \cf9 \strokec9 tol\cf10 \strokec10 =\cf7 \strokec7  \cf9 \strokec9 1e-14\cf7 \strokec7 )\cf4 \strokec4  \cf2 \strokec2 #here the method used is the Nelder-Mead although in the book they use BFGS \cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 q_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 hat\cf4 \strokec4 .x[\cf9 \strokec9 0\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 theta_list\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \{\cf11 \strokec11 'q_hat'\cf4 \strokec4 : \cf8 \strokec8 q_hat\cf4 \strokec4 , \cf11 \strokec11 'iter'\cf4 \strokec4 : \cf8 \strokec8 hat\cf4 \strokec4 .nit\}\cb1 \
\cb3     \cf8 \strokec8 out\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \{\cf11 \strokec11 'theta_list'\cf4 \strokec4 : \cf8 \strokec8 theta_list\cf4 \strokec4 \}\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 out\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #Load the dataset\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 np\cf4 \strokec4 .\cf6 \strokec6 random\cf4 \strokec4 .\cf8 \strokec8 seed\cf7 \strokec7 (\cf9 \strokec9 0\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 ssl\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 ssl\cf4 \strokec4 .\cf8 \strokec8 _create_default_https_context\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 ssl\cf4 \strokec4 .\cf7 \strokec7 _create_unverified_context\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # uncomment those lines above if you get an  URL error message\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 statsmodels\cf4 \strokec4 .\cf6 \strokec6 datasets\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf7 \strokec7 get_rdataset\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 data\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 get_rdataset(\cf11 \strokec11 'Nile'\cf7 \strokec7 )\cf4 \strokec4 .\cf8 \strokec8 data\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #data = pd.read_csv("/Users/albertotrashaj/Desktop/Advanced-time-series-github/Assignement 4/Nile.csv")\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 y\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 array(\cf8 \strokec8 data\cf7 \strokec7 [\cf11 \strokec11 'value'\cf7 \strokec7 ])\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 len(\cf8 \strokec8 y\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 q_0\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 est\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 estimator(\cf8 \strokec8 y\cf7 \strokec7 , \cf8 \strokec8 q_0\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #est = estimator_bfgs(y, q_0) uncomment this line and comment the above one to get the result with the BFGS algorithm\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 q_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 est\cf4 \strokec4 [\cf11 \strokec11 'theta_list'\cf4 \strokec4 ][\cf11 \strokec11 'q_hat'\cf4 \strokec4 ]\cb1 \
\
\cf8 \cb3 \strokec8 filter_output\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 KF(\cf8 \strokec8 y\cf7 \strokec7 , \cf8 \strokec8 q_hat\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 sigma_e_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 sum(\cf8 \strokec8 filter_output\cf7 \strokec7 [\cf11 \strokec11 'v'\cf7 \strokec7 ][\cf9 \strokec9 1\cf7 \strokec7 :] \cf10 \strokec10 **\cf7 \strokec7  \cf9 \strokec9 2\cf7 \strokec7  \cf10 \strokec10 /\cf7 \strokec7  \cf8 \strokec8 filter_output\cf7 \strokec7 [\cf11 \strokec11 'F'\cf7 \strokec7 ][\cf9 \strokec9 1\cf7 \strokec7 :])\cf4 \strokec4  \cf10 \strokec10 /\cf4 \strokec4  (\cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4 )\cb1 \
\cf8 \cb3 \strokec8 sigma_eta_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 q_hat\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 sigma_e_hat\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 print(\cf11 \strokec11 "The value of sigma_e_hat is "\cf7 \strokec7 , \cf8 \strokec8 sigma_e_hat\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 print(\cf11 \strokec11 "The value of sigma_eta_hat is "\cf7 \strokec7 , \cf8 \strokec8 sigma_eta_hat\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # ### Comment\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # From the output we can see that the value for the likelihood and the score are different, but the q-ratio and the final values are almost the same of the table 2.1.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # # Point 2\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Reproduce the Simulation example on Section 2.6.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # To reproduce the example on section 2.6. we need to define a data generating process function according to the one used in the book\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 math\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf7 \strokec7 sqrt\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf7 \strokec7 dgp\cf4 \strokec4  (\cf9 \strokec9 n\cf4 \strokec4 , \cf9 \strokec9 sigma_e\cf4 \strokec4 , \cf9 \strokec9 sigma_eta\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cb1 \
\cb3     \cf8 \strokec8 eta\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 sqrt(\cf9 \strokec9 sigma_eta\cf7 \strokec7 )\cf10 \strokec10 *\cf6 \strokec6 np\cf4 \strokec4 .\cf6 \strokec6 random\cf4 \strokec4 .\cf8 \strokec8 normal\cf7 \strokec7 (\cf9 \strokec9 0\cf7 \strokec7 , \cf9 \strokec9 1\cf7 \strokec7 , \cf9 \strokec9 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 e\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 sqrt(\cf9 \strokec9 sigma_e\cf7 \strokec7 )\cf10 \strokec10 *\cf6 \strokec6 np\cf4 \strokec4 .\cf6 \strokec6 random\cf4 \strokec4 .\cf8 \strokec8 normal\cf7 \strokec7 (\cf9 \strokec9 0\cf7 \strokec7 , \cf9 \strokec9 1\cf7 \strokec7 , \cf9 \strokec9 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 alpha\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf9 \strokec9 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 y\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf9 \strokec9 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 alpha\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1120\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 y\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1120\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf9 \strokec9 0\cf7 \strokec7 , \cf9 \strokec9 n\cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\cb3         \cf8 \strokec8 alpha\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 +\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 alpha\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 eta\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 y\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 +\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 alpha\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 +\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 e\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 +\cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\
\cb3     \cf8 \strokec8 out\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \{\cf11 \strokec11 'y'\cf4 \strokec4 : \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 asarray(\cf8 \strokec8 y\cf7 \strokec7 )\cf4 \strokec4 , \cf11 \strokec11 'alpha'\cf4 \strokec4 : \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 asarray(\cf8 \strokec8 alpha\cf7 \strokec7 )\cf4 \strokec4 , \cf11 \strokec11 'e'\cf4 \strokec4 : \cf8 \strokec8 e\cf4 \strokec4 \}\cb1 \
\
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 out\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 result\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 dgp(\cf8 \strokec8 n\cf7 \strokec7 , \cf8 \strokec8 sigma_e_hat\cf7 \strokec7 , \cf8 \strokec8 sigma_eta_hat\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 y_plus\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 result\cf4 \strokec4 [\cf11 \strokec11 'y'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 e_plus\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 result\cf4 \strokec4 [\cf11 \strokec11 'e'\cf4 \strokec4 ]\cb1 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # To find the Kalaman filter vectors we need to define again a function that performs a Kalman filter iteration. Special mention here has to be done for the expression in 2.30 of the book where they define $L_t = 1 - K_t$\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 def\cf4 \strokec4  \cf7 \strokec7 KFL\cf4 \strokec4  (\cf9 \strokec9 y\cf4 \strokec4 , \cf9 \strokec9 sigma_e\cf4 \strokec4 , \cf9 \strokec9 sigma_eta\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cb1 \
\cb3     \cf2 \strokec2 # Here we initialize the arrays with 0 elements \cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 m10\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 y\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 p10\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 sigma_e\cf4 \strokec4  \cb1 \
\
\
\cb3     \cf8 \strokec8 n\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 len(\cf9 \strokec9 y\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 mu_pred\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 P\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 v\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 K\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 F\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 L\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 m10\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 P\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 p10\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 # Start the Kalman filter recursion and add the L[t] term\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf9 \strokec9 0\cf7 \strokec7 , \cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\cb3         \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 y\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf2 \strokec2 #forecast error \cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 sigma_e\cf12 \strokec12 ;\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 /\cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 +\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 sigma_eta\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 *\cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 *\cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 +\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 *\cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\cb3         \cf8 \strokec8 L\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\
\cb3     \cf2 \strokec2 # As before, since the Kalman filter perform the recursion until n-1, we compute manually the last term needed\cf4 \cb1 \strokec4 \
\
\cb3     \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf9 \strokec9 sigma_e\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 P\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ]\cf10 \strokec10 /\cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 y\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 mu_pred\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\cb3     \cf8 \strokec8 L\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\
\
\cb3     \cf8 \strokec8 out\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \{\cf11 \strokec11 'mu_pred'\cf4 \strokec4 : \cf8 \strokec8 mu_pred\cf4 \strokec4 , \cf11 \strokec11 'v'\cf4 \strokec4 : \cf8 \strokec8 v\cf4 \strokec4 , \cf11 \strokec11 'F'\cf4 \strokec4 : \cf8 \strokec8 F\cf4 \strokec4 , \cf11 \strokec11 'K'\cf4 \strokec4 : \cf8 \strokec8 K\cf4 \strokec4 , \cf11 \strokec11 'P'\cf4 \strokec4 : \cf8 \strokec8 P\cf4 \strokec4 , \cf11 \strokec11 'L'\cf4 \strokec4 : \cf8 \strokec8 L\cf4 \strokec4 \}\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf8 \strokec8 out\cf4 \cb1 \strokec4 \
\
\
\cb3     \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now we apply the Kalman filter to the values of the Nile dataset.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 filter2\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 KFL(\cf8 \strokec8 y\cf7 \strokec7 , \cf8 \strokec8 sigma_e_hat\cf7 \strokec7 , \cf8 \strokec8 sigma_eta_hat\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now we perform the recursion for $r_t$ and $u_t$ \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # We first define the backward recursion of $r_t$ as in expression 2.36: namely \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # $r_\{t-1\} = \\frac\{v_t\}\{F_t\} + L_t \\cdot r_t$\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 v\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'v'\cf4 \strokec4 ] \cf2 \strokec2 #retrieve the elment v from the result of the filtering\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 F\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'F'\cf4 \strokec4 ] \cf2 \strokec2 #retrieve the elment F from the result of the filtering\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 L\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'L'\cf4 \strokec4 ] \cf2 \strokec2 #retrieve the elment L from the result of the filtering\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 r2\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 2\cf7 \strokec7 , \cf9 \strokec9 0\cf7 \strokec7 , \cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 r2\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 /\cf4 \strokec4  \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 L\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 r2\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf2 \strokec2 #apply the formula in the for cicle\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 r2\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Here we define the recursion of $u_t$ as in expression 2.45: namely\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # $u_t = \\frac\{v_t\}\{F_t\} - K_t \\cdot r_t$\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 v\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'v'\cf4 \strokec4 ] \cb1 \
\cf8 \cb3 \strokec8 F\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'F'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 K\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'K'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 u2\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7  (\cf9 \strokec9 1\cf7 \strokec7 , \cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 u2\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 /\cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 *\cf8 \strokec8 r2\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 u2\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now it's possible to define the smoothed disturbaces $\\hat\{\\epsilon_t\} = E(\\epsilon_t | Y_n)$\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # $\\hat\{\\epsilon_t\} = \\sigma^2 \\cdot u_t$\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # where $\\sigma$ is the "sigma_e_hat" that we found before.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 e_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 u2\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 sigma_e_hat\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 e_hat\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Again, as before we apply the Kalman filter to the sample Y\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 filter3\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf7 \strokec7 KFL(\cf8 \strokec8 y_plus\cf7 \strokec7 , \cf8 \strokec8 sigma_e_hat\cf7 \strokec7 , \cf8 \strokec8 sigma_eta_hat\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # #### $r_t$ and $u_t$\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now we proceed to compute $r_t$ and $u_t$.\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # For $r_t$ we have from the formula (2.37) that\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # $r_\{t-1\} = \\frac\{v_t\}\{F_t\} + L_t r_t$\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 v\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter3\cf4 \strokec4 [\cf11 \strokec11 'v'\cf4 \strokec4 ] \cb1 \
\cf8 \cb3 \strokec8 F\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter3\cf4 \strokec4 [\cf11 \strokec11 'F'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 L\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter3\cf4 \strokec4 [\cf11 \strokec11 'L'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 r3\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 2\cf7 \strokec7 , \cf9 \strokec9 0\cf7 \strokec7 , \cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 r3\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 /\cf4 \strokec4  \cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 L\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 r3\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 r3\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # For $u_t$ instead from (4.59) we have that\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # $u_t = \\frac\{v_t\}\{F_\{t\}\} - K_t r_t$\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 v\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter3\cf4 \strokec4 [\cf11 \strokec11 'v'\cf4 \strokec4 ] \cb1 \
\cf8 \cb3 \strokec8 F\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter3\cf4 \strokec4 [\cf11 \strokec11 'F'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 K\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 filter3\cf4 \strokec4 [\cf11 \strokec11 'K'\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 u3\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7  (\cf9 \strokec9 1\cf7 \strokec7 , \cf8 \strokec8 n\cf10 \strokec10 -\cf9 \strokec9 1\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 u3\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 v\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 /\cf8 \strokec8 F\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 K\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cf10 \strokec10 *\cf8 \strokec8 r3\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 u3\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now we need to define the following variables:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  -   $\\hat\{\\epsilon\}^\{+\}$ \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  -   $\\tilde\{\\epsilon\}$                  (2.53)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  -   $\\hat\{\\alpha\}$    (2.33)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  -   $\\alpha^\{+\}$\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #  -   $\\tilde\{\\alpha\}$ (2.53)\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # \cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 e_hat_plus\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 u3\cf4 \strokec4  \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 sigma_e_hat\cf4 \cb1 \strokec4 \
\
\cf8 \cb3 \strokec8 e_tilde\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 e_plus\cf4 \strokec4  \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 e_hat_plus\cf4 \strokec4  \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 e_hat\cf4 \strokec4  \cf2 \strokec2 # (2.53)\cf4 \cb1 \strokec4 \
\
\
\cf8 \cb3 \strokec8 alpha\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \strokec4 .\cf6 \strokec6 Series\cf7 \strokec7 (\cf8 \strokec8 filter2\cf7 \strokec7 [\cf11 \strokec11 'mu_pred'\cf7 \strokec7 ])\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 alpha_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 alpha_hat\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 alpha\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ]\cb1 \
\cf8 \cb3 \strokec8 alpha_hat\cf4 \strokec4 [\cf9 \strokec9 1\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 alpha\cf4 \strokec4 [\cf9 \strokec9 1\cf4 \strokec4 ]\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf9 \strokec9 1\cf7 \strokec7 , \cf8 \strokec8 n\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 alpha_hat\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 alpha\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 +\cf4 \strokec4  \cf8 \strokec8 filter2\cf4 \strokec4 [\cf11 \strokec11 'P'\cf4 \strokec4 ][\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 *\cf4 \strokec4  \cf8 \strokec8 r2\cf4 \strokec4 [\cf8 \strokec8 t\cf10 \strokec10 -\cf9 \strokec9 1\cf4 \strokec4 ] \cf2 \strokec2 # (2.33)\cf4 \cb1 \strokec4 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 alpha_plus\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 zeros(\cf8 \strokec8 n\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 alpha_plus\cf4 \strokec4 [\cf9 \strokec9 0\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf9 \strokec9 1120\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 for\cf4 \strokec4  \cf8 \strokec8 t\cf4 \strokec4  \cf5 \strokec5 in\cf4 \strokec4  \cf6 \strokec6 range\cf7 \strokec7 (\cf9 \strokec9 1\cf7 \strokec7 , \cf8 \strokec8 n\cf7 \strokec7 )\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf8 \strokec8 alpha_plus\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 =\cf4 \strokec4  \cf8 \strokec8 y_plus\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ] \cf10 \strokec10 -\cf4 \strokec4  \cf8 \strokec8 e_plus\cf4 \strokec4 [\cf8 \strokec8 t\cf4 \strokec4 ]\cb1 \
\
\
\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %% [markdown]\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Now we define the $\\tilde\{\\eta\}$ (2.53) and $\\hat\{\\eta\}$ to make the plot (iv)\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 eta_tilde\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 diff(alpha_tilde)\cf4 \strokec4  \cf2 \strokec2 #(2.53)\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 eta_hat\cf4 \strokec4  \cf10 \strokec10 =\cf4 \strokec4  \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 diff(\cf8 \strokec8 alpha_hat\cf7 \strokec7 )\cf4 \strokec4  \cf2 \strokec2 #(2.52)\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Graph i\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 alpha_plus\cf7 \strokec7 , \cf11 \strokec11 'ko'\cf7 \strokec7 ,\cf9 \strokec9 linestyle\cf7 \strokec7  \cf10 \strokec10 =\cf7 \strokec7   \cf11 \strokec11 'None'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylim(\cf9 \strokec9 775\cf7 \strokec7 , \cf9 \strokec9 1400\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 alpha_hat\cf7 \strokec7 , \cf9 \strokec9 color\cf10 \strokec10 =\cf11 \strokec11 'orange'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show()\
\pard\pardeftab720\partightenfactor0
\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Graph ii\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 alpha\cf7 \strokec7 , \cf11 \strokec11 'ko'\cf7 \strokec7 ,\cf9 \strokec9 linestyle\cf7 \strokec7  \cf10 \strokec10 =\cf7 \strokec7   \cf11 \strokec11 'None'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylim(\cf9 \strokec9 700\cf7 \strokec7 , \cf9 \strokec9 1200\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 alpha_hat\cf7 \strokec7 , \cf9 \strokec9 color\cf10 \strokec10 =\cf11 \strokec11 'orange'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show()\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Graph iii\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 axhline(\cf6 \strokec6 np\cf7 \strokec7 .mean(\cf8 \strokec8 e_hat\cf7 \strokec7 ), \cf9 \strokec9 color\cf10 \strokec10 =\cf11 \strokec11 'red'\cf7 \strokec7 , \cf9 \strokec9 linestyle\cf10 \strokec10 =\cf11 \strokec11 '--'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 e_tilde\cf7 \strokec7 , \cf11 \strokec11 'ko'\cf7 \strokec7 ,\cf9 \strokec9 linestyle\cf7 \strokec7  \cf10 \strokec10 =\cf7 \strokec7   \cf11 \strokec11 'None'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylim(\cf10 \strokec10 -\cf9 \strokec9 425\cf7 \strokec7 , \cf9 \strokec9 300\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 e_hat\cf7 \strokec7 , \cf9 \strokec9 color\cf10 \strokec10 =\cf11 \strokec11 'orange'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show()\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # %%\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Graph iiii\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 axhline(\cf6 \strokec6 np\cf7 \strokec7 .mean(\cf8 \strokec8 eta_hat\cf7 \strokec7 ), \cf9 \strokec9 color\cf10 \strokec10 =\cf11 \strokec11 'red'\cf7 \strokec7 , \cf9 \strokec9 linestyle\cf10 \strokec10 =\cf11 \strokec11 '--'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 eta_tilde\cf7 \strokec7 , \cf11 \strokec11 'ko'\cf7 \strokec7 ,\cf9 \strokec9 linestyle\cf7 \strokec7  \cf10 \strokec10 =\cf7 \strokec7   \cf11 \strokec11 'None'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylim(\cf10 \strokec10 -\cf9 \strokec9 100\cf7 \strokec7 , \cf9 \strokec9 100\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 plot(\cf8 \strokec8 eta_hat\cf7 \strokec7 , \cf9 \strokec9 color\cf10 \strokec10 =\cf11 \strokec11 'orange'\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show()\cf4 \cb1 \strokec4 \
\
\
\
}